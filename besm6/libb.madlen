*no list
c---------------------------------------------------------------
c Save registers on the stack.
c Called on entry to each B function with one or more parameters.
c
    b/save: ,name,
         15 ,j+m, 14
            ,its, 7
            ,its, 6
            ,its,
         14 ,mtj, 6
         15 ,mtj, 7
         13 ,uj,
            ,end,
c---------------------------------------------------------------
c Save registers on the stack.
c Called on entry to each B function with no parameters.
c
   b/save0: ,name,
         15 ,mtj, 14
            ,its, 7
            ,its, 6
            ,its,
         14 ,mtj, 6
         15 ,mtj, 7
         13 ,uj,
            ,end,
c---------------------------------------------------------------
c Restore registers from the stack.
c Called on exit from a B function.
c
     b/ret: ,name,
          6 ,mtj, 14
          7 ,mtj, 15
          7 ,stx, -4
            ,sti, 6
            ,sti, 7
            ,sti, 13
         14 ,mtj, 15
         13 ,uj,
            ,end,
c---------------------------------------------------------------
c Terminate the program.
c No return.
c
      exit: ,name,
            ,*74,
            ,end,
c---------------------------------------------------------------
c Write buffered line to stdout.
c
   flush: 8 ,name,
 b/output:lc,block, w_count, b_shift, buffer(22)
c
         12 ,vtm, buffer
            ,*71, info
c
            ,xta, b_shift
            ,u1a, clear
            ,xta, w_count
            ,u1a, clear
         13 ,uj,            . buffer is empty
c
    clear:  ,bss,           . clear buffer
            ,xta,
            ,wtc, w_count
            ,atx, buffer
            ,xta, w_count
            ,uza, done
            ,arx, =77777
            ,aax, =77777
            ,atx, w_count
            ,uj,  clear
c
      done: ,bss,
            ,atx, b_shift
         13 ,uj,
c
   info: 12 ,040,
            ,   ,
            ,end,
c---------------------------------------------------------------
c Append one byte to output buffer.
c
  writeb: 8 ,name,
 b/output:lc,block, w_count, b_shift, buffer(22)
c
    flush:  ,subp,
            ,aax, =377
            ,aex, =12       . compare to linefeed
            ,uza, flush
            ,aex, =12
c
            ,xts, w_count
            ,aex, =26       . 22 words
            ,u1a, putchar
            ,ita, 13
            ,its,
            ,call, flush
            ,sti,
            ,ati, 13
c
 putchar:   ,bss,           . append byte to buffer
            ,sti,
            ,wtc, b_shift
            ,asn, 64-40     . shift left
            ,wtc, w_count
            ,aox, buffer    . read word
            ,wtc, w_count
            ,atx, buffer    . write word
c
            ,xta, b_shift
            ,aex, =50
            ,uza, next_w
            ,aex, =50
            ,arx, =10       . increase shift
            ,atx, b_shift
         13 ,uj,
c
 next_w:    ,bss,           . advance to next word
            ,atx, b_shift   . clear shift
            ,xta, w_count
            ,arx, =1        . increment word count
            ,atx, w_count
         13 ,uj,
            ,end,
c---------------------------------------------------------------
c Append a multi-char to the stdout buffer.
c
     write: ,name,
c
    writeb: ,subp,
            ,its, 7
            ,its, 13
            ,its,
          7 ,vtm, 40            . shift
c
     again: ,bss,
         15 ,xta, -3            . get multi-char
          7 ,asn, 64            . shift right
            ,aax, =377
            ,uza, skip
            ,call, writeb       . print byte
c
      skip: ,bss,
          7 ,utm, -8            . decrease shift
          7 ,v1m, again
c
         15 ,xta, -3            . last byte
            ,aax, =377
            ,call, writeb
c
      done: ,bss,
            ,sti,
            ,sti, 13
            ,sti, 7
         13 ,uj,
            ,end,
